#!/usr/bin/env bash

# use fzf for selecting the repos from the desktop
# and then select one, apply a command such as status, sync with remote, etc.

load_all="0"
fzf_flags="+m --height 50% --style full --input-label 'Destination' --preview"

local_repo(){ # searches the .git dir in $1
    if [ -z $REPOS ]; then
        export REPOS="$(dirname $(find $1 -name ".git" -type d))"
    fi
    echo $REPOS | tr ' ' '\n'
}

repo_selection(){ # fzf selection from all_repo
    local selected
    local repo
    repo=`local_repo $1`
    selected=$( printf "$repo" | fzf $fzf_flags 'tree -C {}')
    echo $selected 
}

git_fnc(){
    git_cmd_a=( ["branch_commit"]="branch -vva" )
    git_cmd=("status" "status -uno" "log" "branch -vva" "commit" "add" "config") # simple git commands
    selected=$( printf '%s\n' "${git_cmd[@]}" | fzf $fzf_flags 'tree -C {}')
    echo $selected
}


while [[ $# -gt 0 ]];do
    if [[ $1 == "--load-all" ]];then
        load_all="1"
    fi
    shift
done


if [[ $load_all == "1" ]];then
    for repo in $(local_repo $HOME); do
        echo $repo
        git -C $repo --no-pager branch -vva 
    done
    exit 0
fi

repo=`repo_selection $HOME`
cmd="cmd"

while [ ! -z "$cmd" ]; do
    cmd=`git_fnc`

    if [[ -z "$repo" || -z "$cmd" ]]; then
        exit 0
    fi

    printf "\n git -C $repo $cmd"
    git -C $repo $cmd
done
